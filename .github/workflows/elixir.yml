name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  MIX_ENV: test

jobs:
  linter:
    name: Codestyle and code analysis
    runs-on: ubuntu-latest

    strategy:
      matrix:
        elixir: [1.14]
        otp: [24.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Retrieve Mix Dependencies Cache
        uses: actions/cache@v3
        id: mix-cache # id to use in retrieve action
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('mix.lock') }}

      - name: Install Dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get
          mix deps.compile

      - name: Check Formatting
        run: mix format --check-formatted

      - name: Run Tests
        run: mix test

      - name: Run Credo
        run: mix credo --strict

      - name: Retrieve PLT Cache
        uses: actions/cache@v3
        id: plt-cache
        with:
          path: priv/plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('mix.lock') }}

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p priv/plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer --no-check --halt-exit-status
